{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"OCS-ENG-UI - OCS Engineering User Interface"},{"location":"/index.html#ocs-eng-ui-ocs-engineering-user-interface","text":"Overview and Guide to this User Manual User Manual Highlights Getting Started Prerequisites Run the ESW-OCS-ENG-UI Application in Local Environment Required File Configuration for an ObsMode Process Flow for Users Log in to OCS-ENG-UI Spawn Sequence Manager Provision Sequence Components Configuring for an Observation Managing an Observation Manage Sequencers Tracking Sequence Progress Resources Page Login and Home Page Logging In Home Page Manage Infrastructure Page Provisioning Unprovision Start Sequencer Configure Manage and Monitor Observation Page The Running Tab Tracking A Sequence The Configurable Tab The Non-Configurable Tab Manage Sequencer Page Sequence Monitoring Overview Sequence Step Features Sequence Editing Sequence Management Functions Pause and Resume Sequence Stop Sequence Abort Sequence The Resources Page\nTo get started with pre-requisites go to Getting Started Page.","title":"OCS-ENG-UI - OCS Engineering User Interface"},{"location":"/UI_overview.html","text":"","title":"Overview and Guide to this User Manual"},{"location":"/UI_overview.html#overview-and-guide-to-this-user-manual","text":"TMT Observatory will use many web applications to observe and manage the observatory instruments and telescope systems. The TMT user interfaces can be grouped into two categories: observing user interfaces and engineering user interfaces. Observing user interfaces will be developed as part of the ESW.HCMS work package. Each subsystem is responsible for an engineering user interface for their subsystem.\nThe OCS Engineering User Interface is the engineering interface for the ESW Observatory Control System or OCS. The purpose of OCS-ENG-UI is to exercise the functionality of OCS. OCS-ENG-UI provides low-level control of OCS that allows us to understand and test OCS.\nOCS-ENG-UI does not necessarily represent the observing user interface that will be used at the telescope during operations.\nThe OCS-ENG-UI provides a browser-based User Interface with the following capabilities that exercise the required functionality of the OCS.\nProvision Sequence Components on multiple computers Configure Sequencers based on the “obsMode” of an observing Sequence Indicate to the user which obsModes are possible at any specific time Track observatory resource usage by configured Sequencers Observatory resources and mapping between obsModes, Sequencers, and resources is configuration-based allowing quick changes without releasing a new version of the UI Track the progress of a Sequence that is submitted to a configured set of Sequencers Allows starting/shutdown of the OCS Sequence Manager See the individual steps and parameter values as they execute in the hierarchy of Sequencers Shutdown, abort, or restart individual Sequencers or Sequence Components\nIt also allows demonstration of features like running parallel observations in different obsModes by checking for any resource conflicts.\nA screenshot of the OCS-ENG-UI showing the status of an executing Sequence is shown below.\nThe UI has been developed based on the currently selected ESW UISTD tools and technologies for browser-based user interfaces:\nReact Ant Design React Testing Library TypeScript\nIn addition, it is built using the ESW-TS Typescript library that supports UI communication with CSW components including Sequencers, Assemblies, and HCDs, as well as the use of CSW Services in user interfaces.","title":"Overview and Guide to this User Manual"},{"location":"/UI_overview.html#user-manual-highlights","text":"This manual aims at helping users understand how the OCS Engineering User Interface works and its different features.\nGetting started which describes the basic setup required to run this user interface on a browser. Process Flow describes the user process flow to work in the UI. Login and Home Page explains login procedure and functionalities on the home page. Manage Infrastructure shows the agents started on different machines and describes how to provision, configure sequence components. Manage Observation is where the sequences can be tracked for different observing modes. It also shows in-use, configurable and non-configurable resources Manage Sequencer is where sequence can be loaded, started, paused and resumed. Once sequence is loaded, other important features get enabled as explained in this page of the manual. Resources shows the resources and sequence components in-use and unavailable.","title":"User Manual Highlights"},{"location":"/Getting-started.html","text":"","title":"Getting Started"},{"location":"/Getting-started.html#getting-started","text":"","title":"Getting Started"},{"location":"/Getting-started.html#prerequisites","text":"The v16.x version of Node.js must be installed.","title":"Prerequisites"},{"location":"/Getting-started.html#install-the-esw-ocs-eng-ui-source-repository","text":"At this time, OCS-ENG-UI can only be run from the UI source directory. This means you must first check out the source code from this repository. Follow the typical GitHub instructions describing how to clone a repository.","title":"Install the ESW-OCS-ENG-UI source repository"},{"location":"/Getting-started.html#required-backend-services-components","text":"To see the OCS-ENG-UI working, it is necessary to have a few pieces of infrastructure running including:\nCSW Location Service CSW Auth Service - user with esw-user role is required Sequence Manager Agent Service One or more Agents should be up and running.","title":"Required backend services/components"},{"location":"/Getting-started.html#running-backend-services-locally","text":"csw-services should be up & running. To install and start the csw-services please follow the instruction given here The latest binaries of ESW need to be present on machine. Current latest : 0.3.0-RC1. cs install esw-services Note: This step needs to be done at least once and/or whenever new changes of esw are pulled from GitHub. To start esw services follow section Running the esw-services using coursier here\nOCS-ENG-UI requires AgentService along with one or more agent should be up & running to manage observations on various agent/machine. To start, run following command esw-services start --agent --agent-service. Sequence manager could be started from UI. However, Sometimes you may want to work in a simulation environment & to start a simulated Sequence Manager, use esw-services start --agent-service -s --simulation Alternatively, You can use esw-services start-eng-ui-services --scripts-version 89e2bf1 --esw-version 0.3.0-RC1 command to start all the required services and agents required to test the observation scripts written in repo sequencer-scripts/ui-setup branch.","title":"Running backend services locally"},{"location":"/Getting-started.html#run-the-esw-ocs-eng-ui-application-in-local-environment","text":"Open the cloned esw-ocs-eng-ui repository on your terminal and then follow the instruction below:\nRun following commands in the terminal.\nnpm install\n  npm start","title":"Run the ESW-OCS-ENG-UI Application in Local Environment"},{"location":"/Getting-started.html#required-file-configuration-for-an-obsmode","text":"ESW-ENG-UI has 2 configuration files that can be modified for testing and operations. These files are kept in the Configuration Service.\nTo simplify testing, the necessary configuration files with testing data are added for you in Configuration Service when you start esw-services with start-eng-ui-services flag.\nsbt:shell> esw-services/run start-eng-ui-services\nWhen you would want to configure an ObsMode other than the ones present in the test configuration files (in ui-setup branch), follow these steps to configure required files for setting up new ObsModes.\nversion.conf at path /tmt/osw/version.json provisionConf.conf at path /tmt/esw/smProvisionConfig.conf smObsModeConf.conf : sequence manager takes path argument.\nFor example, lets say you want to start an ESW-Darknight observation, and it requires 2 resources & Sequencers, Namely ESW & TCS.\nFollowing are the configuration files required to start an observation using esw-ocs-eng-ui.\nVersion file is used by agent service to spawn sequence manager & sequence components while provisioning with appropriate versions. This file need to be saved at /tmt/osw/version.conf with the following json content.\n{\n  \"scripts\": $scriptVersion,\n  \"esw\": $eswVersion\n}\nNext, we need to save smObsModeConfig.conf file in Configuration Service containing information related to ESW-Darknight while starting Sequence Manager. Sequence Manager uses this information to configure an observation, i.e. start Sequencers on provisioned Sequence Components.\nesw-sm {\n  obsModes: {\n    IRIS_Darknight: {\n      resources: [ESW, TCS, IRIS]\n      sequencers: [ESW, TCS, IRIS]\n    }\n  }\n}\nThis file indicates to Sequence Manager that the IRIS_Darknight obsMode requires the ESW, TCS, and IRIS resources, and Sequence Manager will attempt to start a Sequencer for ESW, TCS, and IRIS. It will look for an IRIS_Darknight script in the sequencer-script repository for each Sequencer.\nProvisioning is the deployment and starting of Sequence Components on machines that will be available for Sequencers. For a machine to be available for provisioning, it must have an Agent running.\nFor provisioning, Sequence Manager needs a provision configuration containing information on how many Sequence Components to start on running Agents/machines. This file needs to present at this path /tmt/esw/smProvisionConfig.conf in the Configuration Service.\nesw-sm {\n  provision {\n    ESW: 2\n    IRIS: 1\n  }\n}\nThis is the default provision configuration. It is also possible to override this and create a different provision configuration using the OCS-ENG-UI.\nTo learn how to save a file in config service, visit here.\nNote There must also be Sequencer scripts written in Kotlin for all the Sequencers in all obsModes, and the need to be present in sequencer-script repository. These scripts are assumed to be written in such a way that they would perform actions on receiving pre-defined commands. This subject is not covered in this manual.\nFollow along in the guide to User Process Flow to learn about starting and managing observations in ENG-OCS-UI here.","title":"Required File Configuration for an ObsMode"},{"location":"/UI_processflow.html","text":"","title":"Process Flow for Users"},{"location":"/UI_processflow.html#process-flow-for-users","text":"This flow describes the various activities a user can perform in OCS-ENG-UI. The text here describes the activities at a high level with links to more detailed explanations.","title":"Process Flow for Users"},{"location":"/UI_processflow.html#log-in-to-ocs-eng-ui","text":"After following the installation and setup steps explained in Getting Started, you should be able to see the Login Page of OCS-ENG-UI in the browser. Log in as an authenticated user with credentials specified here.\nOnce logging in is successful, the user will be in the Home Page of ESW-ENG-UI. From here, the user shall be able to follow the steps below to manage an observation in the User Interface.","title":"Log in to OCS-ENG-UI"},{"location":"/UI_processflow.html#spawn-sequence-manager","text":"Sequence Manager is a critical OCS service that manages the configuration of Sequence Components and Sequencers based on an observation’s observing mode or obsMode. It can start, monitor, and shutdown Sequence Components. Sequence Manager also determines which resources are required to execute a Sequence for an obsMode. It helps in executing multiple observation Sequences concurrently by preventing resource conflicts when attempting to run Sequences simultaneously. Hence, it is mandatory that the Sequence Manager be up and running on a machine/Agent.\nIf Sequence Manager hasn’t been started after logging in, then on the Home Page, the user can click on ‘Spawn’ Button to start Sequence Manager as explained here\nNote To understand the Sequence Manager states, please visit the Sequence Manager technical documentation here.","title":"Spawn Sequence Manager"},{"location":"/UI_processflow.html#provision-sequence-components","text":"Once the Sequence Manager has been spawned, the user is ready to provision Sequence Components per Agent. Provisioning is the allocation and starting of Sequence Components on machines that are available to run Sequencers. An Agent process must be running on a machine in order for it to participate in provisioning.\nAs explained here the user can specify the number of Sequence Components to be spawned per Agent.\nNote To know more about the provision functionality see here.","title":"Provision Sequence Components"},{"location":"/UI_processflow.html#configuring-for-an-observation","text":"Once the Sequence Components are provisioned, Sequence Manager can take the configure step. Configure is used to create and start the Sequencers needed for an observing mode. A Sequence Componnet, when configured with an obsMode, becomes a Sequencer. There must always be enough Sequence Components to running to handle all the Sequencers needed for all concurrently executing observations.\nOnce configured for an obsMode, the Sequencers can be used to run Sequences in that obsMode. Unless there is a conflict in the resources required for an observation, TMT can run multiple observations at a time. The Configure feature hence checks for any resource conflicts with ongoing observations.\nUsers can configure from either the Manage Infrastructure page or the Manage Observation page of the UI.\nNote To know more about configure functionality see here.\nWhen changing instruments or observing modes, users will also shut down a running observation as explained here and configure the system for another observation’s Sequencers. This operation takes no more than a couple seconds.","title":"Configuring for an Observation"},{"location":"/UI_processflow.html#managing-an-observation","text":"To manage an observation, a user can go to the Manage Observation page. Here the user can see three tabs: Running, Configurable, and Non-Configurable. OCS-ENG-UI is an engineering user interface. Therefore it provides low-level access to many features of OCS that are not expected to be used during normal operations.\nThe Running tab shows the obsModes that are currently configured with Sequencers and available to run Sequences.\nThe Configurable tab shows obsModes that may be configured after considering the resources used by the Running tab obsModes.\nFinally, the Non-Configurable tab shows which obsModes can not be configured and the reasons why they can not be configured.\nIn the Running tab as explained here the user can:\nConfigure Sequencers Shut down a running observation Track running Sequencers and sequences as explained here Reload a Script by stopping and restarting the sequencer. View resources in use or available.\nIn the Configurable tab as explained here the user can view the obsModes and resources available and also configure a selected obsMode using the ‘Configure’ button.\nIn the Non-Configurable tab as explained here users can see the reasons an obsMode is not configurable either due to resources already in use or unavailability of Sequence Components.","title":"Managing an Observation"},{"location":"/UI_processflow.html#manage-sequencers","text":"Once Sequencers have been configured, a user can go to the Manage Sequencer page by clicking on the gear icon next to name of the Sequencer.","title":"Manage Sequencers"},{"location":"/UI_processflow.html#load-sequence","text":"Users may load a Sequence as explained here. This is a low-level command for engineering purposes. Once a Sequence is loaded, a user should be able to see each Step of the Sequence before it executes. Clicking on a Step shows the Step’s parameters on the right.","title":"Load Sequence"},{"location":"/UI_processflow.html#go-online-go-offline","text":"A user can instruct Sequencers to Go Offline/Go Online functionality to change status of Sequencers to Offline or Online. No Sequence can run on Sequencers that are in the offline state.","title":"Go Online/Go Offline"},{"location":"/UI_processflow.html#start-pause-resume-sequence","text":"Sequencers can be commanded to begin executing immediately when a Sequence is received, or execution can happen in two steps: load Sequence followed by start Sequence. Both are useful in different circumstances.\nOnce a Sequencer is Online and Loaded, a user can start the Sequence by clicking on start button as explained here. Once a Sequencer is started, the icon will change to Pause icon and also the first step will be in the green color indicating it is executing.\nA Sequence can be paused/resumed as explained here.","title":"Start, Pause/Resume Sequence"},{"location":"/UI_processflow.html#stop-abort-sequence","text":"Sequencers support the familiar observing concept of observation/Sequence Stop and Abort. Once a Sequence starts executing, the following buttons get activated:\nStop Sequence - This feature is used to clear/save Sequencer state and any science data before stopping. Abort Sequence - This feature is used to clean up tasks before aborting. Sequence is aborted in any case at the end. Science data is saved if possible, but the Sequence ends as soon as possible.","title":"Stop, Abort Sequence"},{"location":"/UI_processflow.html#step-functionalities","text":"OCS-ENG-UI allows low-level control and monitoring of the Sequence as it is executing including single-stepping, setting breakpoints, and even adding steps. Once a Sequence starts executing, each Step in the Sequence offers the following features. Click on any of the features below to understand how to use it in UI.\nInsert/remove breakpoint Add Steps Delete Steps Duplicate a Step","title":"Step Functionalities"},{"location":"/UI_processflow.html#tracking-sequence-progress","text":"Once a Sequence is executing or completed, a user can track status of the Sequence or the Steps completed in the Manage Observation page as explained here.","title":"Tracking Sequence Progress"},{"location":"/UI_processflow.html#resources-page","text":"The Resources Page displays the list of Sequencer Subsystem, their status and the observation mode that they are running on.","title":"Resources Page"},{"location":"/Login_HomePage.html","text":"","title":"Login and Home Page"},{"location":"/Login_HomePage.html#login-and-home-page","text":"To use OCS-ENG-UI the user must log in to the system. The user interface is integrated with the CSW Authentication and Authorization Service, which keeps track of users and their security roles in the system.","title":"Login and Home Page"},{"location":"/Login_HomePage.html#logging-in","text":"The below image shows a snapshot of the login screen :\nTo access the Engineering UI portal in this release version, a user should log in with roles and credentials as specified below.","title":"Logging In"},{"location":"/Login_HomePage.html#authentication-and-authorization","text":"OCS-ENG-UI is a proper UISTD user interface and requires the user be authenticated with the CSW Authentication and Authorization Service (AAS).\nFor testing purposes, we have created osw-user1, esw-user1 & tcs-user1 users while launching the AAS from csw-services.\nFor testing purposes, user-role osw-user1 can be used.\nUsername: osw-user1         Password: osw-user1\nFor authorized commands, the esw-user role is required.\nUsername: esw-user1         Password: esw-user1\nNote You may add new users to AAS/KeyCloak following procedures in the CSW documentation. To operate OCS-ENG-UI properly the user must have the osw-user or esw-user roles.","title":"Authentication and Authorization"},{"location":"/Login_HomePage.html#home-page","text":"Once log in happens successfully, the user should be able to see the screen below:","title":"Home Page"},{"location":"/Login_HomePage.html#spawn-shutdown-the-sequence-manager","text":"The top of this page shows a button to Spawn/Shutdown the Sequence Manager. Spawning means to startup the Sequence Manager.\nIf Sequence Manager is been spawned with agents (as with esw-services), then it shows the label ‘Shutdown’ for the Sequence Manager.\nNote Sequence Manager may be started without the OCS-ENG-UI from its application, and the system will still work.\nClicking on ‘Shutdown’ button asks for confirmation before shutting down the Sequence Manager.\nOnce Sequence Manager is shutdown, the label changes to ‘Spawn’ and a message of successful shutdown is displayed.\nAfter clicking on ‘Spawn’ button, select an Agent to run Sequence Manager on.\nClicking on one of the Agents, spawns Sequence Manager on that machine.","title":"Spawn/Shutdown the Sequence Manager"},{"location":"/Login_HomePage.html#home-page-also-shows-tabs-for-links-to","text":"Manage Infrastructure Manage Observations Resources","title":"Home Page also shows tabs for links to"},{"location":"/ManageInfrastructure.html","text":"","title":"Manage Infrastructure Page"},{"location":"/ManageInfrastructure.html#manage-infrastructure-page","text":"The Manage Infrastructure Page is used to set up, and monitor the set of Sequence Components and Sequencers needed for executing observations. This page is primarily exercising the functionality of the Sequence Manager, so it must be running.\nThis screenshot below shows the status of Sequence Manager in the upper left of the screen. It displays information that Sequence Manager is running properly on a machine called ESW.sm_machine.\nBelow in the grey area, it shows in blocks or cards, Agents on every machine that will host Sequence Components and Sequencers and HCD/Assembly components on respective subsystem machines.\nIt is possible to add a single Sequence Component to any machine. To add a Sequence Component to an Agent box, click on + sign on that Agent block.","title":"Manage Infrastructure Page"},{"location":"/ManageInfrastructure.html#provisioning","text":"Provisioning is normally done once at the start of a session. The goal is to start up as many Sequence Components as needed for the observing session. The default values in the provision popup can be used in most development or engineering situations.\nThe Provision button on this page, when selected, displays the dialog box below where the user can enter the number of Sequence Components per Agent to be spawned for each particular Agent.\nWhile provisioning, the API shuts down currently running Sequence Components before spawning new ones. You can only have one set of provisioned Sequence Components.\nNote To know more about Provision functionality Visit Here\nOnce provisioning happens successfully, a message is displayed or else an error is displayed near the top of the screen. The error messages can disappear quickly, so read fast!","title":"Provisioning"},{"location":"/ManageInfrastructure.html#unprovision","text":"Unprovisioning is the reverse of provisioning. Once the Agents are provisioned with Sequence Components, the label on the provision button changes to Unprovision. Once Unprovision is completed, all Sequence Components are shut down and the Agents no longer show any Sequence Components.\nUnprovision can also be done after ‘Configure’, in which case Sequencers are also shut down.\nClick on Unprovision button to stop all Sequence Components.\nUnprovision happens successfully and all Sequence Components are shutdown.","title":"Unprovision"},{"location":"/ManageInfrastructure.html#start-sequencer","text":"When the Provision call is completed, it is possible to start Sequencers, and the Start Sequencer button is enabled.\nClick on Start Sequencer Button to see the following dialog box.\nSelect a Subsystem and ObsMode to start the Sequencer.\nAfter selecting Subsystem and ObsMode, the Sequencer will be started with the proper Script. In the following screenshot, a Sequencer has been started for the WFOS_Calib obsMode on WFOS.machine1.\nClick : (three vertical dots!) on the Agent card with the started Sequencer to see some available options:\nStop Sequencer Reload Script Shutdown Sequencer","title":"Start Sequencer"},{"location":"/ManageInfrastructure.html#stop-sequencer","text":"Click on Stop Sequencer choice to stop a particular Sequencer and Sequence Component.\nNote that there is no longer a Sequence Component running. This is a low-level command and is not normally needed.","title":"Stop Sequencer"},{"location":"/ManageInfrastructure.html#reload-script","text":"Click on Reload Script to load a Script for the Sequencer.\nThis action shuts down the Sequencer and starts it again by reloading the Script. All Script state will be lost.","title":"Reload Script"},{"location":"/ManageInfrastructure.html#shutdown-sequencer","text":"Click on Shutdown Component and a confirmation dialog box comes up.\nThis action shuts down the Sequencer and Sequence Component.","title":"Shutdown Sequencer"},{"location":"/ManageInfrastructure.html#configure","text":"Configure is the normal way of setting up all of the Sequencers for an obsMode. Configure works from the obsMode to determine which resources and Sequencers are needed to execute Sequences for a specific obsMode.\nWhen the observing system has been provisioned successfully, the Configure button is enabled in Manage Infrastructure and Manage Observation page.\nOn clicking the Configure button, a list of the possible Observing Modes are displayed. The user can select one of them and the Sequence Manager will start all the needed Sequencers and load the required Scripts.\nNote To know more about Configure functionality visit here.\nThe figure below shows that the Sequence Components were configured successfully and Sequencers started.\nThis screenshot shows that the IRIS_Darknight obsMode was started with Sequencers for TCS, IRIS, and ESW. The card shows what machine each Sequencer is running on and what Script is running in the Sequencer.\nConfigure can also be done from Manage Observation Page","title":"Configure"},{"location":"/ManageObservation.html","text":"","title":"Manage and Monitor Observation Page"},{"location":"/ManageObservation.html#manage-and-monitor-observation-page","text":"The Manage Observation Page provides a way for the user to understand how the OCS is configured and what is possible based on what is already configured. It is also allows the high-level monitoring of executing Sequences and the ability to drill down into the Sequences on different Sequencers, and even modify Sequences.\nThe Manage Observation Page shows the following three tabs: Running, Configurable, and Non-configurable. Each tab is described below.","title":"Manage and Monitor Observation Page"},{"location":"/ManageObservation.html#the-running-tab","text":"This page is useful for seeing a high-level view of all the obsModes currently configured. On the left is a list of all the obsModes that are currently configured. In this case, only the IRIS_Darknight obsMode is configured.\nBy selecting an obsMode on the left, the right-hand side shows of the tab displays the list of Sequencers that are currently part of the obsMode, whether they are currently executing a Sequence, and their status.\nAt the bottom, the tab also shows information about the resources in use by the obsMode.\nThere are many things that can be done from this page. Clicking on the gear next to name of a Sequencer redirects to the Manage Sequencer Page for the selected Sequencer. This is covered below.","title":"The Running Tab"},{"location":"/ManageObservation.html#shutdown-sequencers","text":"Clicking on the Shutdown button in the top right corner leads to the shutting down of all the Sequencers listed below for the obsMode.","title":"Shutdown Sequencers"},{"location":"/ManageObservation.html#reload-script","text":"Sometimes, it is necessary or desirable to reload the Script in a specific Sequencer. Clicking on Reload Script for a Sequencer helps in reloading the specific Script for that Sequencer. This action can even be done when a Sequence is executing, so it is protected by a popup warning box that requires a confirmation. If the Script is reloaded, the Sequencer is destroyed and recreated with the correct Script. This destroys any Sequencer state. This is a low-level engineering command that is helpful if a Script has somehow become unresponsive.\nOnce a positive confirmation is given, it will reload the Script by stopping and restarting the Sequencer.\nNote When a Script is reloaded, all internal Sequencer state information is gone. If a Sequence had been loaded in the Sequencer prior to the restart, it will need to be reloaded or resent. If the Sequence is partially executed, knowledge of partial execution is gone and the Sequence will need to be reloaded.","title":"Reload Script"},{"location":"/ManageObservation.html#tracking-a-sequence","text":"The Running Tab of this page is also used to track the high-level progress of a Sequence during execution. Each Sequencer row displays the current status of the running Sequence in the Sequencer along with the total number of Steps in the Sequence and the name of the currently executing Step.\nFor example: When a Sequence is paused the status of that Sequencer will show in the Manage Observation Page as paused.\nSimilarly, the Sequencer Status values will show one of the following possible status values:\nLoaded - a Sequence has been loaded in the Sequencer, but is not yet running Idle/Online - a Sequence has finished executing In Progress - a Sequence is executing and a Step is executing Offline - a Sequencer is offline Killed\nNote To read more about the above steps in the Sequencer Lifecycle Click here\nAt the end of Sequence, the status will show ‘All Steps Completed’ or the number of Steps completed for each Sequencer.\nTo know more about Sequence completion read here\nThere are more details that can be monitored for an executing Sequence. This is described in the Manage Sequencer Page here","title":"Tracking A Sequence"},{"location":"/ManageObservation.html#the-configurable-tab","text":"The Running Tab is obviously the most important and useful, but the Configurable Tab is useful for knowing what is possible. This tab shows a list of obsModes that are available for configuring. The list of obsModes shows only the obsModes that are possible with the resources that are not already in use by the obsModes shown in the Running Tab. The bottom of the tab shows the resources that the obsMode will use if configured.\nAs shown below, the WFOS_Calib calibration obsMode is configurable since it only uses the WFOS resource.\n.\nClicking on Configure button in this Tab serves same purpose of Configure Button on the Manage Infrastructure Page.\nOnce selected, the WFOS_Calib obsMode moves from the Configurable Tab to the Running Tab.","title":"The Configurable Tab"},{"location":"/ManageObservation.html#the-non-configurable-tab","text":"The last tab is the Non-Configurable Tab. This tab shows the list of obsModes that can not be configured based on what is currently running. This list will eventually include all the instrument and engineering obsModes and may be quite long. It is true that only a few obsModes can execute Sequences concurrently based on resources.\nOnce an obsMode is selected, the right-hand side displays information regarding why the selected obsMode is not available. There are currently two reasons: lack of available Sequence Components, or lack of availability of resources. The former can be fixed by provisioning more Sequence Components, the latter requires shutting down a currently configured obsMode to free resources.","title":"The Non-Configurable Tab"},{"location":"/ManageSequencer.html","text":"","title":"Manage Sequencer Page"},{"location":"/ManageSequencer.html#manage-sequencer-page","text":"The Manage Sequencer Page is possibly the most useful and fun to use in the OCS-ENG-UI. Every Sequencer that is configured has a Manage Sequencer Page that is accessed by clicking on the gear icon for the Sequencer in the top-level Manager Observation Page. While the Manage Observation Page gives a high-level view of all the Sequencers of an obsMode including information about an executing Sequence, the Manage Sequencer Page goes one step deeper and displays the details of the loaded Sequence, its Steps, and shows the progress of the Sequence as it is executed by the Script.\nA Manage Sequencer Page Sequence monitoring functionalities including:\nInserting and Removing Breakpoints and Single-Stepping a Sequence Display the parameter values for each Step in the Sequence as it is executing Editing a Sequence including adding, duplicating, and deleting Steps in a Sequence\nThe page also allows low-level control of a single Sequencer. Some of these commands are useful for diagnostics and testing.\nLoading a Sequence Starting loaded Sequence Stopping loaded Sequence Pause and Resume an executing Sequence Aborting and stopping a running Sequence","title":"Manage Sequencer Page"},{"location":"/ManageSequencer.html#sequence-monitoring-overview","text":"When a Sequence is loaded, the left-hand side of the Sequencer’s page shows the Steps that are part of the loaded Sequence. When no Sequence is loaded, the page is empty as shown below.\nOnce a Sequence is loaded, the left-hand side shows the Steps of the Sequence as shown in the following screenshot of the IRIS Sequencer executing the IRIS.Darknight script. There are 3 steps and all three have different colors. A **yellow** Step means the Step has not yet been executed. The green Step indicates the currently executing Step. The first Step is black meaning it has already executed.\nNote also that the second step is shown inside a blue box. The blue indicates the Step is selected. The parameters and values of the selected Step are shown on the right-hand side. In this screenshot, the selected Step is also the executing Step, but that is not necessary; any Step can be selected and its values displayed.\nNote also that the normal behavior of this view is that the selected Step automatically tracks the executing Step. As the Sequence executes, the selected Step also moves, so it always shows the executing Step’s parameters and values. If you select a different step, the automatic behavior is stopped until the executing Step is re-selected. Once the executing Step is re-selected, the automatic behavior restarts.","title":"Sequence Monitoring Overview"},{"location":"/ManageSequencer.html#loading-a-sequence","text":"In most cases, the Sequence is sent by another application (such as future SOSS tools or esw-shell) or submitted by another Sequencer as when the ESW Sequencer sends a Sequence to the IRIS or TCS Sequencer. But sometimes it is helpful to load a Sequence directly into a Sequencer for testing.\nNote A sample Sequence.json file with some sequence of commands is shown below. While writing sequence please specify parameters like _type , source, commandName, maybeObsId, paramSet.\n[\n  {\n    \"_type\": \"Setup\",\n    \"source\": \"ESW.darknight\",\n    \"commandName\": \"setup-iris\",\n    \"maybeObsId\": \"2020A-001-123\",\n    \"paramSet\": [\n      {\n        \"StringKey\": {\n          \"keyName\": \"StringKey\",\n          \"values\": [\n            \"Str1\",\n            \"Str2\"\n          ],\n          \"units\": \"NoUnits\"\n        }\n      }\n    ]\n  },\n  {\n    \"_type\": \"Setup\",\n    \"source\": \"ESW.darknight\",\n    \"commandName\": \"setup-tcs\",\n    \"maybeObsId\": \"2020A-001-123\",\n    \"paramSet\": [\n      {\n        \"IntKey\": {\n          \"keyName\": \"IntKey\",\n          \"values\": [\n            70,\n            80\n          ],\n          \"units\": \"NoUnits\"\n        }\n      }\n    ]\n  }\n]\nTo load a Sequence from a file, click on the Load Sequence button which will open up a dialog box to select a Sequence in JSON format (.json) from the local disk.\nOnce the Sequence is loaded, the Status message below ‘Sequence Steps’ changes to ‘Loaded’ and the Go Offline button is enabled.\nIt shows list of steps in Orange color, indicating they are not yet executed. The name of the Step is inside the Step on the left. Selecting a Step shows the Step’s parameters, values, and units.","title":"Loading a Sequence"},{"location":"/ManageSequencer.html#starting-a-sequence","text":"Sequences can be started in two ways. A Sequence sent using the Command Service submit causes the Sequence to begin executing immediately just like a command sent to an Assembly.\nIf the Sequence is sent using load, it is ready for execution, but execution does not start until the Sequencer is commanded to start executing. The Play button will also execute a loaded Sequence.\nClick on the Play button next to ‘Sequence Steps’ to start a Sequence (the circle with the triangle like your music player).\nOnce a Sequence is started, the first Step in the Sequence of steps is shown in the green color indicating it is executing.\nOnce started, the Stop Sequence and Abort Sequence Button are enabled and the Load Sequence and Go Offline button are disabled.","title":"Starting a Sequence"},{"location":"/ManageSequencer.html#sequence-step-features","text":"There are a few actions available on a specific Step in a loaded Sequence in a Sequencer. Select the vertical ellipsis ⋮ icon on any of the Steps to view the actions for the Step.\nThe available actions are:\nInsert a Breakpoint Add Steps Duplicate Steps Delete Steps","title":"Sequence Step Features"},{"location":"/ManageSequencer.html#insert-and-remove-breakpoint","text":"During the execution of a Sequence or during an observation, it is sometimes needed to stop the Sequence before or after a specific Step. One can always wait and pause the Sequence, but setting a breakpoint is more convenient. The breakpoint can be set between Steps, and the Sequence will stop when it reaches the breakpoint.\nClick on the vertical ellipsis ⋮ for the Step where the breakpoint needs to be inserted. Select ‘Insert Breakpoint’ Option.\nOnce the breakpoint is inserted on the Step, the Sequence will pause at that Step. Note that breakpoints can only be set on Steps that are not yet executed (i.e. yellow)!\nSequence pauses at the step where breakpoint was inserted.\nTo remove a previously inserted breakpoint, go to the Step where breakpoint was inserted and click on the vertical ellipsis ⋮ and select ‘Remove Breakpoint’ .\nIf the Sequence is paused, once the breakpoint is removed, the Sequence will resume execution. If the Sequence has not yet reached the breakpoint, it is just removed.","title":"Insert and Remove Breakpoint"},{"location":"/ManageSequencer.html#step-through","text":"Step-Through is a convenience for setting and removing breakpoints. Sometimes, it is desirable to execute a Sequence one step at a time. Sometimes this is called single-stepping. Step-Through is a way to execute a Sequence one step at a time.\nClick on Step-Through button to execute one step at a time.\nAfter clicking on Step-Through Button, you can see the ‘observe-command3’ step is executed while ‘setup-iris’ has a breakpoint. Hence only one step is executed at one time.","title":"Step-Through"},{"location":"/ManageSequencer.html#sequence-editing","text":"Several Sequence editing functions are available from a Sequencer’s Manage Sequence Page. Of course, a Sequence must be loaded for editing to be possible.","title":"Sequence Editing"},{"location":"/ManageSequencer.html#adding-steps","text":"Once a Sequence is loaded, Steps can be added from a file. This is not too frequently used, but may sometimes be useful. Select the vertical ellipsis ⋮ at the Step after which more Steps are to be added.\nTo add steps create a .json file. Sample step is shown below and can be saved as AddSteps.json.\n[\n  {\n    \"_type\": \"Setup\",\n    \"source\": \"ESW.darknight\",\n    \"commandName\": \"setup-iris\",\n    \"maybeObsId\": \"2020A-001-123\",\n    \"paramSet\": [\n      {\n        \"StringKey\": {\n          \"keyName\": \"StringKey\",\n          \"values\": [\n            \"Str3\",\n            \"Str4\"\n          ],\n          \"units\": \"NoUnits\"\n        }\n      }\n    ]\n  }\n]\nOnce Add Step is clicked, it opens a file selection dialog box to select a file of Steps as a JSON formatted file (.json).\nAfter the file is read, the Steps are added to the Sequence as shown below. This can only be done in areas of a Sequence that are not yet executed.","title":"Adding Steps"},{"location":"/ManageSequencer.html#duplicate-steps","text":"It is possible to select Steps and duplicate them, adding them to the end of the Sequence.\nClick on the vertical ellipsis ⋮ at a Step to duplicate and then click on ‘Duplicate’ in the Step menu. Select the checkboxes of the Steps to be duplicated. Multiple Steps can also be selecte. Select the Steps and click the Duplicate button at the bottom.\nNote that it is possible to duplicate previously executed Steps.\nIf duplication is successful, an appropriate message will be displayed and the Steps will be appended to the end of the Sequence.\nWarning It is possible to cause problems when editing Steps in a Sequence. Make sure you know aht you are doing!","title":"Duplicate Steps"},{"location":"/ManageSequencer.html#delete-step","text":"Sequence Steps can be deleted one at a time. Only unexecuted Steps can be deleted.\nTo Delete a step, click on the vertical ellipsis ⋮ of that step and click on ‘Delete’. A pop up box shows up warning of impending danger. Now click on the ‘Delete’ button to confirm deletion of the Step or else select the ‘Cancel’ button to avoid deleting.\nOnce the Step is deleted, a message is displayed indicating a successful deletion.","title":"Delete Step"},{"location":"/ManageSequencer.html#sequence-management-functions","text":"This page also offers several functions for managing the state and behavior of an individual Sequencer. The Manage Observation Page has similar functions for the observaton, but this page controls an individual Sequencer.\nThe buttons dicussed here are in the upper right of the Manage Sequencer page.","title":"Sequence Management Functions"},{"location":"/ManageSequencer.html#go-offline-go-online","text":"The selected Sequencer can be told to go offline and online.\nThe Go Offline button is only enabled when the Sequencer is idle or all its Steps have been executed or it has not yet started executing.\nOnce this button is clicked, the Sequencer goes offline.\nOnce the Sequencer is offline, the ‘Go offline’ label is replaced by ‘Go online’ label on the button. Click on ‘Go Online’ button to make the Sequencer go online again.\nTo read about Go offline and Go Online functionality visit here.","title":"Go Offline, Go Online"},{"location":"/ManageSequencer.html#pause-and-resume-sequence","text":"The selected Sequencer can be paused and resumed independent of the rest of the observation. The pause is equivalent to setting a breakpoint on the first step after the currently executing step.\nWhen the Sequence is in progress, the pause button can be used to pause the Sequence at the current Step. Once the Sequence is paused, a message will be displayed and the pause icon will change to the resume icon.\nWhen the Sequence is paused, the resume button can be used to resume the Sequence from the paused Step. Once resumed, the Sequence will start executing again and the pause icon will again be enabled.","title":"Pause and Resume Sequence"},{"location":"/ManageSequencer.html#stop-sequence","text":"A single Sequencer can be sent the Stop command.\nTo stop a Sequence in progress, click on ‘Stop Sequence’ button. This causes the Stop command to be sent to the Sequencer and the code will be executed in the Stop handler.\nA confirmation dialog box pops up.\nClick on the ‘Confirm’ button to stop the Sequencer.\nTo read about Stop Sequence functionality visit here.","title":"Stop Sequence"},{"location":"/ManageSequencer.html#abort-sequence","text":"A single Sequencer can be sent the Abort command.\nTo immediately abort a Sequence click on the ‘Abort’ button. A warning pop-up is shown.\nThen click on the ‘Confirm’ button on the pop-up box to abort successfully.\nTo read about Abort Sequence functionality visit here.","title":"Abort Sequence"},{"location":"/Resources.html","text":"","title":"The Resources Page"},{"location":"/Resources.html#the-resources-page","text":"The resources of the observatory are the major pieces of the hardware and software system that are required by an observation in a specific obsMode. Analysis during the ESW Phase 1 FDR led to a fairly short list of resources including the instruments, and the telescope with its subsystems. On TMT, only one instrument at a time can observe the sky. Other instruments can take calibration exposures if they have a self-contained calibration source.\nThe resources are configured for Sequence Manager as subsystems at this point in time. TCS, for instance, represents the telescope and all its subsystems. The AO system including NFIRAOS, LGSF, AOESW, etc. is also a single resource. As discussed elsewhere, resources are used by Sequence Manager to determine which obsModes/Sequences can run concurrently.\nThis page shows the list of all observatory resources along with its status as InUse or Available. If the resources is inuse the name of the obsMode using the resource is shown in the last column.\nThe screenshot below shows TCS, IRIS, and NFIRAOS are in use by the IRIS_Darknight obsMode, but the WFOS resources is available for use.","title":"The Resources Page"}]}